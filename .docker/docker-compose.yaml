version: '3.9'
services:
  testing_app:
    container_name: app_test_app
    environment:
      - DB_NAME=${DB_NAME:-test_db}
      - DB_HOST=${DB_HOST:-testing_db}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - RABBIT_URL=${RABBIT_URL:-amqp://user:password@rabbitmq:5672/}
      - PORT_SERVER=${PORT_SERVER:-:8080}
    build:
      context: ../
      dockerfile: .docker/dockerfile
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - testing_db
      - rabbitmq
    networks:
      - default
  testing_db:
    image: postgres:latest
    container_name: db_test_db
    environment:
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-test_db}
      - DATABASE_HOST=${DB_HOST:-localhost}
    ports:
      - '5432:5432'
    volumes:
      - testing_db:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER:-user}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD:-password}
    ports:
      - '5672:5672'
      - '15672:15672'
volumes:
  testing_db:

networks:
  default:
    driver: bridge